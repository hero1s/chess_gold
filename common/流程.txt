1:登陆流程
    1：客户端请求php登陆注册后，获得：uid,time,key(c++,key由uid+time+密码做md5生成)，server ip
    2：客户端发送登陆信息给c++，c++用同样算法md5校验，uid,time,key正确合法无修改，拉取用户数据，做逻辑处理
    3：采用算法校验而不使用读取缓存是为了提高性能，防止登陆包攻击。c++内存会缓存key做进一步优化
    4：为了安全后期可以加上缓存校验，但是前提是通过了算法校验后才会去缓存校验。	
	
2:php<-->c++ 通信消息打包与解包
	网络层消息结构
	message_head
	{
		uint32  length_    消息包长度(不含包头)
	}
	逻辑消息结构
	{
		uint16  msgID    消息ID
		bytes   msg        消息内容(二进制数据，长度为length - 2，内容为json字符串)
	}

3:前端<-->c++通信消息打包与解包
	网络层消息结构
	message_head
	{
		uint32  length_    消息包长度(不含包头)
	}
	逻辑层消息结构
	{
		uint16_t msgID;        // 消息id
		bytes   msg;	   // 消息内容		    
	} 
4:热更流程
	1：c++部署更新预发布服
	2：灰度测试(需要用户有白名单表示及灰度测试的状态)
	3：切换服务器（修改服务器状态，系统自动切换）
	4：前端热更
5:灰度测试
	1：白名单用户客户端提供切换服务器的功能
	2：测试通过后服务器发布切换服务器