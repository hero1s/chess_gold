// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: land_logic_msg.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_land_5flogic_5fmsg_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_land_5flogic_5fmsg_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3010000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3010000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_land_5flogic_5fmsg_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_land_5flogic_5fmsg_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[12]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_land_5flogic_5fmsg_2eproto;
namespace net {
class msg_land_banker_info_rep;
class msg_land_banker_info_repDefaultTypeInternal;
extern msg_land_banker_info_repDefaultTypeInternal _msg_land_banker_info_rep_default_instance_;
class msg_land_call_score_rep;
class msg_land_call_score_repDefaultTypeInternal;
extern msg_land_call_score_repDefaultTypeInternal _msg_land_call_score_rep_default_instance_;
class msg_land_call_score_req;
class msg_land_call_score_reqDefaultTypeInternal;
extern msg_land_call_score_reqDefaultTypeInternal _msg_land_call_score_req_default_instance_;
class msg_land_game_info_rep;
class msg_land_game_info_repDefaultTypeInternal;
extern msg_land_game_info_repDefaultTypeInternal _msg_land_game_info_rep_default_instance_;
class msg_land_game_over_rep;
class msg_land_game_over_repDefaultTypeInternal;
extern msg_land_game_over_repDefaultTypeInternal _msg_land_game_over_rep_default_instance_;
class msg_land_hand_card_rep;
class msg_land_hand_card_repDefaultTypeInternal;
extern msg_land_hand_card_repDefaultTypeInternal _msg_land_hand_card_rep_default_instance_;
class msg_land_out_card_rep;
class msg_land_out_card_repDefaultTypeInternal;
extern msg_land_out_card_repDefaultTypeInternal _msg_land_out_card_rep_default_instance_;
class msg_land_out_card_req;
class msg_land_out_card_reqDefaultTypeInternal;
extern msg_land_out_card_reqDefaultTypeInternal _msg_land_out_card_req_default_instance_;
class msg_land_pass_card_rep;
class msg_land_pass_card_repDefaultTypeInternal;
extern msg_land_pass_card_repDefaultTypeInternal _msg_land_pass_card_rep_default_instance_;
class msg_land_pass_card_req;
class msg_land_pass_card_reqDefaultTypeInternal;
extern msg_land_pass_card_reqDefaultTypeInternal _msg_land_pass_card_req_default_instance_;
class msg_land_req_hand_card_req;
class msg_land_req_hand_card_reqDefaultTypeInternal;
extern msg_land_req_hand_card_reqDefaultTypeInternal _msg_land_req_hand_card_req_default_instance_;
class msg_land_start_rep;
class msg_land_start_repDefaultTypeInternal;
extern msg_land_start_repDefaultTypeInternal _msg_land_start_rep_default_instance_;
}  // namespace net
PROTOBUF_NAMESPACE_OPEN
template<> ::net::msg_land_banker_info_rep* Arena::CreateMaybeMessage<::net::msg_land_banker_info_rep>(Arena*);
template<> ::net::msg_land_call_score_rep* Arena::CreateMaybeMessage<::net::msg_land_call_score_rep>(Arena*);
template<> ::net::msg_land_call_score_req* Arena::CreateMaybeMessage<::net::msg_land_call_score_req>(Arena*);
template<> ::net::msg_land_game_info_rep* Arena::CreateMaybeMessage<::net::msg_land_game_info_rep>(Arena*);
template<> ::net::msg_land_game_over_rep* Arena::CreateMaybeMessage<::net::msg_land_game_over_rep>(Arena*);
template<> ::net::msg_land_hand_card_rep* Arena::CreateMaybeMessage<::net::msg_land_hand_card_rep>(Arena*);
template<> ::net::msg_land_out_card_rep* Arena::CreateMaybeMessage<::net::msg_land_out_card_rep>(Arena*);
template<> ::net::msg_land_out_card_req* Arena::CreateMaybeMessage<::net::msg_land_out_card_req>(Arena*);
template<> ::net::msg_land_pass_card_rep* Arena::CreateMaybeMessage<::net::msg_land_pass_card_rep>(Arena*);
template<> ::net::msg_land_pass_card_req* Arena::CreateMaybeMessage<::net::msg_land_pass_card_req>(Arena*);
template<> ::net::msg_land_req_hand_card_req* Arena::CreateMaybeMessage<::net::msg_land_req_hand_card_req>(Arena*);
template<> ::net::msg_land_start_rep* Arena::CreateMaybeMessage<::net::msg_land_start_rep>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace net {

enum CLIENT_MSG_LAND : int {
  S2C_MSG_LAND_NULL = 0,
  S2C_MSG_LAND_GAME_INFO = 3101,
  S2C_MSG_LAND_START = 3102,
  C2S_MSG_LAND_CALL_SCORE_REQ = 3103,
  S2C_MSG_LAND_CALL_SCORE = 3104,
  C2S_MSG_LAND_REQ_HAND_CARD = 3105,
  S2C_MSG_LAND_HAND_CARD = 3106,
  S2C_MSG_LAND_BANKER_INFO = 3107,
  C2S_MSG_LAND_OUT_CARD_REQ = 3108,
  S2C_MSG_LAND_OUT_CARD = 3109,
  C2S_MSG_LAND_PASS_CARD_REQ = 3110,
  S2C_MSG_LAND_PASS_CARD = 3111,
  S2C_MSG_LAND_GAME_OVER = 3112,
  CLIENT_MSG_LAND_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  CLIENT_MSG_LAND_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool CLIENT_MSG_LAND_IsValid(int value);
constexpr CLIENT_MSG_LAND CLIENT_MSG_LAND_MIN = S2C_MSG_LAND_NULL;
constexpr CLIENT_MSG_LAND CLIENT_MSG_LAND_MAX = S2C_MSG_LAND_GAME_OVER;
constexpr int CLIENT_MSG_LAND_ARRAYSIZE = CLIENT_MSG_LAND_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CLIENT_MSG_LAND_descriptor();
template<typename T>
inline const std::string& CLIENT_MSG_LAND_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CLIENT_MSG_LAND>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CLIENT_MSG_LAND_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CLIENT_MSG_LAND_descriptor(), enum_t_value);
}
inline bool CLIENT_MSG_LAND_Parse(
    const std::string& name, CLIENT_MSG_LAND* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CLIENT_MSG_LAND>(
    CLIENT_MSG_LAND_descriptor(), name, value);
}
enum emLAND_TYPE : int {
  LAND_TYPE_Common = 0,
  emLAND_TYPE_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  emLAND_TYPE_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool emLAND_TYPE_IsValid(int value);
constexpr emLAND_TYPE emLAND_TYPE_MIN = LAND_TYPE_Common;
constexpr emLAND_TYPE emLAND_TYPE_MAX = LAND_TYPE_Common;
constexpr int emLAND_TYPE_ARRAYSIZE = emLAND_TYPE_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* emLAND_TYPE_descriptor();
template<typename T>
inline const std::string& emLAND_TYPE_Name(T enum_t_value) {
  static_assert(::std::is_same<T, emLAND_TYPE>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function emLAND_TYPE_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    emLAND_TYPE_descriptor(), enum_t_value);
}
inline bool emLAND_TYPE_Parse(
    const std::string& name, emLAND_TYPE* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<emLAND_TYPE>(
    emLAND_TYPE_descriptor(), name, value);
}
// ===================================================================

class msg_land_game_info_rep :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:net.msg_land_game_info_rep) */ {
 public:
  msg_land_game_info_rep();
  virtual ~msg_land_game_info_rep();

  msg_land_game_info_rep(const msg_land_game_info_rep& from);
  msg_land_game_info_rep(msg_land_game_info_rep&& from) noexcept
    : msg_land_game_info_rep() {
    *this = ::std::move(from);
  }

  inline msg_land_game_info_rep& operator=(const msg_land_game_info_rep& from) {
    CopyFrom(from);
    return *this;
  }
  inline msg_land_game_info_rep& operator=(msg_land_game_info_rep&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msg_land_game_info_rep& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msg_land_game_info_rep* internal_default_instance() {
    return reinterpret_cast<const msg_land_game_info_rep*>(
               &_msg_land_game_info_rep_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(msg_land_game_info_rep& a, msg_land_game_info_rep& b) {
    a.Swap(&b);
  }
  inline void Swap(msg_land_game_info_rep* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msg_land_game_info_rep* New() const final {
    return CreateMaybeMessage<msg_land_game_info_rep>(nullptr);
  }

  msg_land_game_info_rep* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msg_land_game_info_rep>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msg_land_game_info_rep& from);
  void MergeFrom(const msg_land_game_info_rep& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msg_land_game_info_rep* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "net.msg_land_game_info_rep";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_land_5flogic_5fmsg_2eproto);
    return ::descriptor_table_land_5flogic_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCallScoreFieldNumber = 4,
    kTurnCardDataFieldNumber = 7,
    kBankerCardFieldNumber = 8,
    kHandCardCountFieldNumber = 9,
    kHandCardDataFieldNumber = 10,
    kBombCountFieldNumber = 1,
    kBankerUserFieldNumber = 2,
    kCurUserFieldNumber = 3,
    kTurnWinerFieldNumber = 5,
    kFirstUserFieldNumber = 6,
    kGameStateFieldNumber = 11,
    kWaitTimeFieldNumber = 12,
  };
  // repeated uint32 call_score = 4;
  int call_score_size() const;
  private:
  int _internal_call_score_size() const;
  public:
  void clear_call_score();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_call_score(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_call_score() const;
  void _internal_add_call_score(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_call_score();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 call_score(int index) const;
  void set_call_score(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_call_score(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      call_score() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_call_score();

  // repeated uint32 turn_card_data = 7;
  int turn_card_data_size() const;
  private:
  int _internal_turn_card_data_size() const;
  public:
  void clear_turn_card_data();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_turn_card_data(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_turn_card_data() const;
  void _internal_add_turn_card_data(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_turn_card_data();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 turn_card_data(int index) const;
  void set_turn_card_data(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_turn_card_data(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      turn_card_data() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_turn_card_data();

  // repeated uint32 banker_card = 8;
  int banker_card_size() const;
  private:
  int _internal_banker_card_size() const;
  public:
  void clear_banker_card();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_banker_card(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_banker_card() const;
  void _internal_add_banker_card(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_banker_card();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 banker_card(int index) const;
  void set_banker_card(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_banker_card(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      banker_card() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_banker_card();

  // repeated uint32 hand_card_count = 9;
  int hand_card_count_size() const;
  private:
  int _internal_hand_card_count_size() const;
  public:
  void clear_hand_card_count();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_hand_card_count(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_hand_card_count() const;
  void _internal_add_hand_card_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_hand_card_count();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 hand_card_count(int index) const;
  void set_hand_card_count(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_hand_card_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      hand_card_count() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_hand_card_count();

  // repeated uint32 hand_card_data = 10;
  int hand_card_data_size() const;
  private:
  int _internal_hand_card_data_size() const;
  public:
  void clear_hand_card_data();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_hand_card_data(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_hand_card_data() const;
  void _internal_add_hand_card_data(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_hand_card_data();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 hand_card_data(int index) const;
  void set_hand_card_data(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_hand_card_data(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      hand_card_data() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_hand_card_data();

  // uint32 bomb_count = 1;
  void clear_bomb_count();
  ::PROTOBUF_NAMESPACE_ID::uint32 bomb_count() const;
  void set_bomb_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_bomb_count() const;
  void _internal_set_bomb_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 banker_user = 2;
  void clear_banker_user();
  ::PROTOBUF_NAMESPACE_ID::uint32 banker_user() const;
  void set_banker_user(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_banker_user() const;
  void _internal_set_banker_user(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 cur_user = 3;
  void clear_cur_user();
  ::PROTOBUF_NAMESPACE_ID::uint32 cur_user() const;
  void set_cur_user(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_cur_user() const;
  void _internal_set_cur_user(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 turn_winer = 5;
  void clear_turn_winer();
  ::PROTOBUF_NAMESPACE_ID::uint32 turn_winer() const;
  void set_turn_winer(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_turn_winer() const;
  void _internal_set_turn_winer(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 first_user = 6;
  void clear_first_user();
  ::PROTOBUF_NAMESPACE_ID::uint32 first_user() const;
  void set_first_user(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_first_user() const;
  void _internal_set_first_user(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 game_state = 11;
  void clear_game_state();
  ::PROTOBUF_NAMESPACE_ID::uint32 game_state() const;
  void set_game_state(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_game_state() const;
  void _internal_set_game_state(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 wait_time = 12;
  void clear_wait_time();
  ::PROTOBUF_NAMESPACE_ID::uint32 wait_time() const;
  void set_wait_time(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_wait_time() const;
  void _internal_set_wait_time(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:net.msg_land_game_info_rep)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > call_score_;
  mutable std::atomic<int> _call_score_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > turn_card_data_;
  mutable std::atomic<int> _turn_card_data_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > banker_card_;
  mutable std::atomic<int> _banker_card_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > hand_card_count_;
  mutable std::atomic<int> _hand_card_count_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > hand_card_data_;
  mutable std::atomic<int> _hand_card_data_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 bomb_count_;
  ::PROTOBUF_NAMESPACE_ID::uint32 banker_user_;
  ::PROTOBUF_NAMESPACE_ID::uint32 cur_user_;
  ::PROTOBUF_NAMESPACE_ID::uint32 turn_winer_;
  ::PROTOBUF_NAMESPACE_ID::uint32 first_user_;
  ::PROTOBUF_NAMESPACE_ID::uint32 game_state_;
  ::PROTOBUF_NAMESPACE_ID::uint32 wait_time_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_land_5flogic_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class msg_land_start_rep :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:net.msg_land_start_rep) */ {
 public:
  msg_land_start_rep();
  virtual ~msg_land_start_rep();

  msg_land_start_rep(const msg_land_start_rep& from);
  msg_land_start_rep(msg_land_start_rep&& from) noexcept
    : msg_land_start_rep() {
    *this = ::std::move(from);
  }

  inline msg_land_start_rep& operator=(const msg_land_start_rep& from) {
    CopyFrom(from);
    return *this;
  }
  inline msg_land_start_rep& operator=(msg_land_start_rep&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msg_land_start_rep& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msg_land_start_rep* internal_default_instance() {
    return reinterpret_cast<const msg_land_start_rep*>(
               &_msg_land_start_rep_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(msg_land_start_rep& a, msg_land_start_rep& b) {
    a.Swap(&b);
  }
  inline void Swap(msg_land_start_rep* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msg_land_start_rep* New() const final {
    return CreateMaybeMessage<msg_land_start_rep>(nullptr);
  }

  msg_land_start_rep* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msg_land_start_rep>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msg_land_start_rep& from);
  void MergeFrom(const msg_land_start_rep& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msg_land_start_rep* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "net.msg_land_start_rep";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_land_5flogic_5fmsg_2eproto);
    return ::descriptor_table_land_5flogic_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCardDataFieldNumber = 5,
    kStartUserFieldNumber = 1,
    kCurUserFieldNumber = 2,
    kValidCardDataFieldNumber = 3,
    kValidCardIndexFieldNumber = 4,
    kCurRoundFieldNumber = 6,
  };
  // repeated uint32 card_data = 5;
  int card_data_size() const;
  private:
  int _internal_card_data_size() const;
  public:
  void clear_card_data();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_card_data(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_card_data() const;
  void _internal_add_card_data(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_card_data();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 card_data(int index) const;
  void set_card_data(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_card_data(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      card_data() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_card_data();

  // uint32 start_user = 1;
  void clear_start_user();
  ::PROTOBUF_NAMESPACE_ID::uint32 start_user() const;
  void set_start_user(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_start_user() const;
  void _internal_set_start_user(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 cur_user = 2;
  void clear_cur_user();
  ::PROTOBUF_NAMESPACE_ID::uint32 cur_user() const;
  void set_cur_user(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_cur_user() const;
  void _internal_set_cur_user(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 valid_card_data = 3;
  void clear_valid_card_data();
  ::PROTOBUF_NAMESPACE_ID::uint32 valid_card_data() const;
  void set_valid_card_data(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_valid_card_data() const;
  void _internal_set_valid_card_data(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 valid_card_index = 4;
  void clear_valid_card_index();
  ::PROTOBUF_NAMESPACE_ID::uint32 valid_card_index() const;
  void set_valid_card_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_valid_card_index() const;
  void _internal_set_valid_card_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 cur_round = 6;
  void clear_cur_round();
  ::PROTOBUF_NAMESPACE_ID::uint32 cur_round() const;
  void set_cur_round(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_cur_round() const;
  void _internal_set_cur_round(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:net.msg_land_start_rep)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > card_data_;
  mutable std::atomic<int> _card_data_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 start_user_;
  ::PROTOBUF_NAMESPACE_ID::uint32 cur_user_;
  ::PROTOBUF_NAMESPACE_ID::uint32 valid_card_data_;
  ::PROTOBUF_NAMESPACE_ID::uint32 valid_card_index_;
  ::PROTOBUF_NAMESPACE_ID::uint32 cur_round_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_land_5flogic_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class msg_land_call_score_req :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:net.msg_land_call_score_req) */ {
 public:
  msg_land_call_score_req();
  virtual ~msg_land_call_score_req();

  msg_land_call_score_req(const msg_land_call_score_req& from);
  msg_land_call_score_req(msg_land_call_score_req&& from) noexcept
    : msg_land_call_score_req() {
    *this = ::std::move(from);
  }

  inline msg_land_call_score_req& operator=(const msg_land_call_score_req& from) {
    CopyFrom(from);
    return *this;
  }
  inline msg_land_call_score_req& operator=(msg_land_call_score_req&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msg_land_call_score_req& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msg_land_call_score_req* internal_default_instance() {
    return reinterpret_cast<const msg_land_call_score_req*>(
               &_msg_land_call_score_req_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(msg_land_call_score_req& a, msg_land_call_score_req& b) {
    a.Swap(&b);
  }
  inline void Swap(msg_land_call_score_req* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msg_land_call_score_req* New() const final {
    return CreateMaybeMessage<msg_land_call_score_req>(nullptr);
  }

  msg_land_call_score_req* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msg_land_call_score_req>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msg_land_call_score_req& from);
  void MergeFrom(const msg_land_call_score_req& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msg_land_call_score_req* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "net.msg_land_call_score_req";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_land_5flogic_5fmsg_2eproto);
    return ::descriptor_table_land_5flogic_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCallScoreFieldNumber = 1,
  };
  // uint32 call_score = 1;
  void clear_call_score();
  ::PROTOBUF_NAMESPACE_ID::uint32 call_score() const;
  void set_call_score(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_call_score() const;
  void _internal_set_call_score(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:net.msg_land_call_score_req)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint32 call_score_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_land_5flogic_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class msg_land_call_score_rep :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:net.msg_land_call_score_rep) */ {
 public:
  msg_land_call_score_rep();
  virtual ~msg_land_call_score_rep();

  msg_land_call_score_rep(const msg_land_call_score_rep& from);
  msg_land_call_score_rep(msg_land_call_score_rep&& from) noexcept
    : msg_land_call_score_rep() {
    *this = ::std::move(from);
  }

  inline msg_land_call_score_rep& operator=(const msg_land_call_score_rep& from) {
    CopyFrom(from);
    return *this;
  }
  inline msg_land_call_score_rep& operator=(msg_land_call_score_rep&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msg_land_call_score_rep& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msg_land_call_score_rep* internal_default_instance() {
    return reinterpret_cast<const msg_land_call_score_rep*>(
               &_msg_land_call_score_rep_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(msg_land_call_score_rep& a, msg_land_call_score_rep& b) {
    a.Swap(&b);
  }
  inline void Swap(msg_land_call_score_rep* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msg_land_call_score_rep* New() const final {
    return CreateMaybeMessage<msg_land_call_score_rep>(nullptr);
  }

  msg_land_call_score_rep* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msg_land_call_score_rep>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msg_land_call_score_rep& from);
  void MergeFrom(const msg_land_call_score_rep& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msg_land_call_score_rep* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "net.msg_land_call_score_rep";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_land_5flogic_5fmsg_2eproto);
    return ::descriptor_table_land_5flogic_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCurUserFieldNumber = 1,
    kCallUserFieldNumber = 2,
    kCallScoreFieldNumber = 3,
  };
  // uint32 cur_user = 1;
  void clear_cur_user();
  ::PROTOBUF_NAMESPACE_ID::uint32 cur_user() const;
  void set_cur_user(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_cur_user() const;
  void _internal_set_cur_user(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 call_user = 2;
  void clear_call_user();
  ::PROTOBUF_NAMESPACE_ID::uint32 call_user() const;
  void set_call_user(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_call_user() const;
  void _internal_set_call_user(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 call_score = 3;
  void clear_call_score();
  ::PROTOBUF_NAMESPACE_ID::uint32 call_score() const;
  void set_call_score(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_call_score() const;
  void _internal_set_call_score(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:net.msg_land_call_score_rep)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint32 cur_user_;
  ::PROTOBUF_NAMESPACE_ID::uint32 call_user_;
  ::PROTOBUF_NAMESPACE_ID::uint32 call_score_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_land_5flogic_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class msg_land_req_hand_card_req :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:net.msg_land_req_hand_card_req) */ {
 public:
  msg_land_req_hand_card_req();
  virtual ~msg_land_req_hand_card_req();

  msg_land_req_hand_card_req(const msg_land_req_hand_card_req& from);
  msg_land_req_hand_card_req(msg_land_req_hand_card_req&& from) noexcept
    : msg_land_req_hand_card_req() {
    *this = ::std::move(from);
  }

  inline msg_land_req_hand_card_req& operator=(const msg_land_req_hand_card_req& from) {
    CopyFrom(from);
    return *this;
  }
  inline msg_land_req_hand_card_req& operator=(msg_land_req_hand_card_req&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msg_land_req_hand_card_req& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msg_land_req_hand_card_req* internal_default_instance() {
    return reinterpret_cast<const msg_land_req_hand_card_req*>(
               &_msg_land_req_hand_card_req_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(msg_land_req_hand_card_req& a, msg_land_req_hand_card_req& b) {
    a.Swap(&b);
  }
  inline void Swap(msg_land_req_hand_card_req* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msg_land_req_hand_card_req* New() const final {
    return CreateMaybeMessage<msg_land_req_hand_card_req>(nullptr);
  }

  msg_land_req_hand_card_req* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msg_land_req_hand_card_req>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msg_land_req_hand_card_req& from);
  void MergeFrom(const msg_land_req_hand_card_req& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msg_land_req_hand_card_req* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "net.msg_land_req_hand_card_req";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_land_5flogic_5fmsg_2eproto);
    return ::descriptor_table_land_5flogic_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChairIdFieldNumber = 1,
  };
  // uint32 chair_id = 1;
  void clear_chair_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 chair_id() const;
  void set_chair_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_chair_id() const;
  void _internal_set_chair_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:net.msg_land_req_hand_card_req)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint32 chair_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_land_5flogic_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class msg_land_hand_card_rep :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:net.msg_land_hand_card_rep) */ {
 public:
  msg_land_hand_card_rep();
  virtual ~msg_land_hand_card_rep();

  msg_land_hand_card_rep(const msg_land_hand_card_rep& from);
  msg_land_hand_card_rep(msg_land_hand_card_rep&& from) noexcept
    : msg_land_hand_card_rep() {
    *this = ::std::move(from);
  }

  inline msg_land_hand_card_rep& operator=(const msg_land_hand_card_rep& from) {
    CopyFrom(from);
    return *this;
  }
  inline msg_land_hand_card_rep& operator=(msg_land_hand_card_rep&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msg_land_hand_card_rep& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msg_land_hand_card_rep* internal_default_instance() {
    return reinterpret_cast<const msg_land_hand_card_rep*>(
               &_msg_land_hand_card_rep_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(msg_land_hand_card_rep& a, msg_land_hand_card_rep& b) {
    a.Swap(&b);
  }
  inline void Swap(msg_land_hand_card_rep* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msg_land_hand_card_rep* New() const final {
    return CreateMaybeMessage<msg_land_hand_card_rep>(nullptr);
  }

  msg_land_hand_card_rep* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msg_land_hand_card_rep>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msg_land_hand_card_rep& from);
  void MergeFrom(const msg_land_hand_card_rep& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msg_land_hand_card_rep* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "net.msg_land_hand_card_rep";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_land_5flogic_5fmsg_2eproto);
    return ::descriptor_table_land_5flogic_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCardDataFieldNumber = 2,
    kChairIdFieldNumber = 1,
  };
  // repeated uint32 card_data = 2;
  int card_data_size() const;
  private:
  int _internal_card_data_size() const;
  public:
  void clear_card_data();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_card_data(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_card_data() const;
  void _internal_add_card_data(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_card_data();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 card_data(int index) const;
  void set_card_data(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_card_data(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      card_data() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_card_data();

  // uint32 chair_id = 1;
  void clear_chair_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 chair_id() const;
  void set_chair_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_chair_id() const;
  void _internal_set_chair_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:net.msg_land_hand_card_rep)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > card_data_;
  mutable std::atomic<int> _card_data_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 chair_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_land_5flogic_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class msg_land_banker_info_rep :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:net.msg_land_banker_info_rep) */ {
 public:
  msg_land_banker_info_rep();
  virtual ~msg_land_banker_info_rep();

  msg_land_banker_info_rep(const msg_land_banker_info_rep& from);
  msg_land_banker_info_rep(msg_land_banker_info_rep&& from) noexcept
    : msg_land_banker_info_rep() {
    *this = ::std::move(from);
  }

  inline msg_land_banker_info_rep& operator=(const msg_land_banker_info_rep& from) {
    CopyFrom(from);
    return *this;
  }
  inline msg_land_banker_info_rep& operator=(msg_land_banker_info_rep&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msg_land_banker_info_rep& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msg_land_banker_info_rep* internal_default_instance() {
    return reinterpret_cast<const msg_land_banker_info_rep*>(
               &_msg_land_banker_info_rep_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(msg_land_banker_info_rep& a, msg_land_banker_info_rep& b) {
    a.Swap(&b);
  }
  inline void Swap(msg_land_banker_info_rep* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msg_land_banker_info_rep* New() const final {
    return CreateMaybeMessage<msg_land_banker_info_rep>(nullptr);
  }

  msg_land_banker_info_rep* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msg_land_banker_info_rep>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msg_land_banker_info_rep& from);
  void MergeFrom(const msg_land_banker_info_rep& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msg_land_banker_info_rep* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "net.msg_land_banker_info_rep";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_land_5flogic_5fmsg_2eproto);
    return ::descriptor_table_land_5flogic_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBankerCardFieldNumber = 4,
    kBankerUserFieldNumber = 1,
    kCurUserFieldNumber = 2,
    kCallScoreFieldNumber = 3,
  };
  // repeated uint32 banker_card = 4;
  int banker_card_size() const;
  private:
  int _internal_banker_card_size() const;
  public:
  void clear_banker_card();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_banker_card(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_banker_card() const;
  void _internal_add_banker_card(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_banker_card();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 banker_card(int index) const;
  void set_banker_card(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_banker_card(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      banker_card() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_banker_card();

  // uint32 banker_user = 1;
  void clear_banker_user();
  ::PROTOBUF_NAMESPACE_ID::uint32 banker_user() const;
  void set_banker_user(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_banker_user() const;
  void _internal_set_banker_user(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 cur_user = 2;
  void clear_cur_user();
  ::PROTOBUF_NAMESPACE_ID::uint32 cur_user() const;
  void set_cur_user(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_cur_user() const;
  void _internal_set_cur_user(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 call_score = 3;
  void clear_call_score();
  ::PROTOBUF_NAMESPACE_ID::uint32 call_score() const;
  void set_call_score(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_call_score() const;
  void _internal_set_call_score(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:net.msg_land_banker_info_rep)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > banker_card_;
  mutable std::atomic<int> _banker_card_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 banker_user_;
  ::PROTOBUF_NAMESPACE_ID::uint32 cur_user_;
  ::PROTOBUF_NAMESPACE_ID::uint32 call_score_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_land_5flogic_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class msg_land_out_card_req :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:net.msg_land_out_card_req) */ {
 public:
  msg_land_out_card_req();
  virtual ~msg_land_out_card_req();

  msg_land_out_card_req(const msg_land_out_card_req& from);
  msg_land_out_card_req(msg_land_out_card_req&& from) noexcept
    : msg_land_out_card_req() {
    *this = ::std::move(from);
  }

  inline msg_land_out_card_req& operator=(const msg_land_out_card_req& from) {
    CopyFrom(from);
    return *this;
  }
  inline msg_land_out_card_req& operator=(msg_land_out_card_req&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msg_land_out_card_req& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msg_land_out_card_req* internal_default_instance() {
    return reinterpret_cast<const msg_land_out_card_req*>(
               &_msg_land_out_card_req_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(msg_land_out_card_req& a, msg_land_out_card_req& b) {
    a.Swap(&b);
  }
  inline void Swap(msg_land_out_card_req* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msg_land_out_card_req* New() const final {
    return CreateMaybeMessage<msg_land_out_card_req>(nullptr);
  }

  msg_land_out_card_req* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msg_land_out_card_req>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msg_land_out_card_req& from);
  void MergeFrom(const msg_land_out_card_req& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msg_land_out_card_req* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "net.msg_land_out_card_req";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_land_5flogic_5fmsg_2eproto);
    return ::descriptor_table_land_5flogic_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCardDataFieldNumber = 1,
  };
  // repeated uint32 card_data = 1;
  int card_data_size() const;
  private:
  int _internal_card_data_size() const;
  public:
  void clear_card_data();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_card_data(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_card_data() const;
  void _internal_add_card_data(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_card_data();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 card_data(int index) const;
  void set_card_data(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_card_data(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      card_data() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_card_data();

  // @@protoc_insertion_point(class_scope:net.msg_land_out_card_req)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > card_data_;
  mutable std::atomic<int> _card_data_cached_byte_size_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_land_5flogic_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class msg_land_out_card_rep :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:net.msg_land_out_card_rep) */ {
 public:
  msg_land_out_card_rep();
  virtual ~msg_land_out_card_rep();

  msg_land_out_card_rep(const msg_land_out_card_rep& from);
  msg_land_out_card_rep(msg_land_out_card_rep&& from) noexcept
    : msg_land_out_card_rep() {
    *this = ::std::move(from);
  }

  inline msg_land_out_card_rep& operator=(const msg_land_out_card_rep& from) {
    CopyFrom(from);
    return *this;
  }
  inline msg_land_out_card_rep& operator=(msg_land_out_card_rep&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msg_land_out_card_rep& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msg_land_out_card_rep* internal_default_instance() {
    return reinterpret_cast<const msg_land_out_card_rep*>(
               &_msg_land_out_card_rep_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(msg_land_out_card_rep& a, msg_land_out_card_rep& b) {
    a.Swap(&b);
  }
  inline void Swap(msg_land_out_card_rep* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msg_land_out_card_rep* New() const final {
    return CreateMaybeMessage<msg_land_out_card_rep>(nullptr);
  }

  msg_land_out_card_rep* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msg_land_out_card_rep>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msg_land_out_card_rep& from);
  void MergeFrom(const msg_land_out_card_rep& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msg_land_out_card_rep* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "net.msg_land_out_card_rep";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_land_5flogic_5fmsg_2eproto);
    return ::descriptor_table_land_5flogic_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCardDataFieldNumber = 3,
    kCurUserFieldNumber = 1,
    kOutCardUserFieldNumber = 2,
  };
  // repeated uint32 card_data = 3;
  int card_data_size() const;
  private:
  int _internal_card_data_size() const;
  public:
  void clear_card_data();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_card_data(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_card_data() const;
  void _internal_add_card_data(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_card_data();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 card_data(int index) const;
  void set_card_data(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_card_data(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      card_data() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_card_data();

  // uint32 cur_user = 1;
  void clear_cur_user();
  ::PROTOBUF_NAMESPACE_ID::uint32 cur_user() const;
  void set_cur_user(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_cur_user() const;
  void _internal_set_cur_user(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 out_card_user = 2;
  void clear_out_card_user();
  ::PROTOBUF_NAMESPACE_ID::uint32 out_card_user() const;
  void set_out_card_user(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_out_card_user() const;
  void _internal_set_out_card_user(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:net.msg_land_out_card_rep)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > card_data_;
  mutable std::atomic<int> _card_data_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 cur_user_;
  ::PROTOBUF_NAMESPACE_ID::uint32 out_card_user_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_land_5flogic_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class msg_land_pass_card_req :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:net.msg_land_pass_card_req) */ {
 public:
  msg_land_pass_card_req();
  virtual ~msg_land_pass_card_req();

  msg_land_pass_card_req(const msg_land_pass_card_req& from);
  msg_land_pass_card_req(msg_land_pass_card_req&& from) noexcept
    : msg_land_pass_card_req() {
    *this = ::std::move(from);
  }

  inline msg_land_pass_card_req& operator=(const msg_land_pass_card_req& from) {
    CopyFrom(from);
    return *this;
  }
  inline msg_land_pass_card_req& operator=(msg_land_pass_card_req&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msg_land_pass_card_req& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msg_land_pass_card_req* internal_default_instance() {
    return reinterpret_cast<const msg_land_pass_card_req*>(
               &_msg_land_pass_card_req_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(msg_land_pass_card_req& a, msg_land_pass_card_req& b) {
    a.Swap(&b);
  }
  inline void Swap(msg_land_pass_card_req* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msg_land_pass_card_req* New() const final {
    return CreateMaybeMessage<msg_land_pass_card_req>(nullptr);
  }

  msg_land_pass_card_req* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msg_land_pass_card_req>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msg_land_pass_card_req& from);
  void MergeFrom(const msg_land_pass_card_req& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msg_land_pass_card_req* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "net.msg_land_pass_card_req";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_land_5flogic_5fmsg_2eproto);
    return ::descriptor_table_land_5flogic_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kReasonFieldNumber = 1,
  };
  // uint32 reason = 1;
  void clear_reason();
  ::PROTOBUF_NAMESPACE_ID::uint32 reason() const;
  void set_reason(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_reason() const;
  void _internal_set_reason(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:net.msg_land_pass_card_req)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint32 reason_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_land_5flogic_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class msg_land_pass_card_rep :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:net.msg_land_pass_card_rep) */ {
 public:
  msg_land_pass_card_rep();
  virtual ~msg_land_pass_card_rep();

  msg_land_pass_card_rep(const msg_land_pass_card_rep& from);
  msg_land_pass_card_rep(msg_land_pass_card_rep&& from) noexcept
    : msg_land_pass_card_rep() {
    *this = ::std::move(from);
  }

  inline msg_land_pass_card_rep& operator=(const msg_land_pass_card_rep& from) {
    CopyFrom(from);
    return *this;
  }
  inline msg_land_pass_card_rep& operator=(msg_land_pass_card_rep&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msg_land_pass_card_rep& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msg_land_pass_card_rep* internal_default_instance() {
    return reinterpret_cast<const msg_land_pass_card_rep*>(
               &_msg_land_pass_card_rep_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(msg_land_pass_card_rep& a, msg_land_pass_card_rep& b) {
    a.Swap(&b);
  }
  inline void Swap(msg_land_pass_card_rep* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msg_land_pass_card_rep* New() const final {
    return CreateMaybeMessage<msg_land_pass_card_rep>(nullptr);
  }

  msg_land_pass_card_rep* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msg_land_pass_card_rep>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msg_land_pass_card_rep& from);
  void MergeFrom(const msg_land_pass_card_rep& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msg_land_pass_card_rep* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "net.msg_land_pass_card_rep";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_land_5flogic_5fmsg_2eproto);
    return ::descriptor_table_land_5flogic_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTurnOverFieldNumber = 1,
    kCurUserFieldNumber = 2,
    kPassCardUserFieldNumber = 3,
  };
  // uint32 turn_over = 1;
  void clear_turn_over();
  ::PROTOBUF_NAMESPACE_ID::uint32 turn_over() const;
  void set_turn_over(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_turn_over() const;
  void _internal_set_turn_over(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 cur_user = 2;
  void clear_cur_user();
  ::PROTOBUF_NAMESPACE_ID::uint32 cur_user() const;
  void set_cur_user(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_cur_user() const;
  void _internal_set_cur_user(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 pass_card_user = 3;
  void clear_pass_card_user();
  ::PROTOBUF_NAMESPACE_ID::uint32 pass_card_user() const;
  void set_pass_card_user(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_pass_card_user() const;
  void _internal_set_pass_card_user(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:net.msg_land_pass_card_rep)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint32 turn_over_;
  ::PROTOBUF_NAMESPACE_ID::uint32 cur_user_;
  ::PROTOBUF_NAMESPACE_ID::uint32 pass_card_user_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_land_5flogic_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class msg_land_game_over_rep :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:net.msg_land_game_over_rep) */ {
 public:
  msg_land_game_over_rep();
  virtual ~msg_land_game_over_rep();

  msg_land_game_over_rep(const msg_land_game_over_rep& from);
  msg_land_game_over_rep(msg_land_game_over_rep&& from) noexcept
    : msg_land_game_over_rep() {
    *this = ::std::move(from);
  }

  inline msg_land_game_over_rep& operator=(const msg_land_game_over_rep& from) {
    CopyFrom(from);
    return *this;
  }
  inline msg_land_game_over_rep& operator=(msg_land_game_over_rep&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msg_land_game_over_rep& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msg_land_game_over_rep* internal_default_instance() {
    return reinterpret_cast<const msg_land_game_over_rep*>(
               &_msg_land_game_over_rep_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(msg_land_game_over_rep& a, msg_land_game_over_rep& b) {
    a.Swap(&b);
  }
  inline void Swap(msg_land_game_over_rep* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msg_land_game_over_rep* New() const final {
    return CreateMaybeMessage<msg_land_game_over_rep>(nullptr);
  }

  msg_land_game_over_rep* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msg_land_game_over_rep>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msg_land_game_over_rep& from);
  void MergeFrom(const msg_land_game_over_rep& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msg_land_game_over_rep* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "net.msg_land_game_over_rep";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_land_5flogic_5fmsg_2eproto);
    return ::descriptor_table_land_5flogic_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kScoresFieldNumber = 1,
    kEachBombCountsFieldNumber = 5,
    kCardCountsFieldNumber = 7,
    kHandCardDataFieldNumber = 8,
    kChunTianFieldNumber = 2,
    kFanChunTianFieldNumber = 3,
    kBombCountFieldNumber = 4,
    kBankerScoreFieldNumber = 6,
  };
  // repeated int64 scores = 1;
  int scores_size() const;
  private:
  int _internal_scores_size() const;
  public:
  void clear_scores();
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_scores(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
      _internal_scores() const;
  void _internal_add_scores(::PROTOBUF_NAMESPACE_ID::int64 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
      _internal_mutable_scores();
  public:
  ::PROTOBUF_NAMESPACE_ID::int64 scores(int index) const;
  void set_scores(int index, ::PROTOBUF_NAMESPACE_ID::int64 value);
  void add_scores(::PROTOBUF_NAMESPACE_ID::int64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
      scores() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
      mutable_scores();

  // repeated uint32 each_bomb_counts = 5;
  int each_bomb_counts_size() const;
  private:
  int _internal_each_bomb_counts_size() const;
  public:
  void clear_each_bomb_counts();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_each_bomb_counts(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_each_bomb_counts() const;
  void _internal_add_each_bomb_counts(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_each_bomb_counts();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 each_bomb_counts(int index) const;
  void set_each_bomb_counts(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_each_bomb_counts(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      each_bomb_counts() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_each_bomb_counts();

  // repeated uint32 card_counts = 7;
  int card_counts_size() const;
  private:
  int _internal_card_counts_size() const;
  public:
  void clear_card_counts();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_card_counts(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_card_counts() const;
  void _internal_add_card_counts(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_card_counts();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 card_counts(int index) const;
  void set_card_counts(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_card_counts(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      card_counts() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_card_counts();

  // repeated uint32 hand_card_data = 8;
  int hand_card_data_size() const;
  private:
  int _internal_hand_card_data_size() const;
  public:
  void clear_hand_card_data();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_hand_card_data(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_hand_card_data() const;
  void _internal_add_hand_card_data(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_hand_card_data();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 hand_card_data(int index) const;
  void set_hand_card_data(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_hand_card_data(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      hand_card_data() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_hand_card_data();

  // uint32 chun_tian = 2;
  void clear_chun_tian();
  ::PROTOBUF_NAMESPACE_ID::uint32 chun_tian() const;
  void set_chun_tian(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_chun_tian() const;
  void _internal_set_chun_tian(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 fan_chun_tian = 3;
  void clear_fan_chun_tian();
  ::PROTOBUF_NAMESPACE_ID::uint32 fan_chun_tian() const;
  void set_fan_chun_tian(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_fan_chun_tian() const;
  void _internal_set_fan_chun_tian(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 bomb_count = 4;
  void clear_bomb_count();
  ::PROTOBUF_NAMESPACE_ID::uint32 bomb_count() const;
  void set_bomb_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_bomb_count() const;
  void _internal_set_bomb_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 banker_score = 6;
  void clear_banker_score();
  ::PROTOBUF_NAMESPACE_ID::uint32 banker_score() const;
  void set_banker_score(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_banker_score() const;
  void _internal_set_banker_score(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:net.msg_land_game_over_rep)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 > scores_;
  mutable std::atomic<int> _scores_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > each_bomb_counts_;
  mutable std::atomic<int> _each_bomb_counts_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > card_counts_;
  mutable std::atomic<int> _card_counts_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > hand_card_data_;
  mutable std::atomic<int> _hand_card_data_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 chun_tian_;
  ::PROTOBUF_NAMESPACE_ID::uint32 fan_chun_tian_;
  ::PROTOBUF_NAMESPACE_ID::uint32 bomb_count_;
  ::PROTOBUF_NAMESPACE_ID::uint32 banker_score_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_land_5flogic_5fmsg_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// msg_land_game_info_rep

// uint32 bomb_count = 1;
inline void msg_land_game_info_rep::clear_bomb_count() {
  bomb_count_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msg_land_game_info_rep::_internal_bomb_count() const {
  return bomb_count_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msg_land_game_info_rep::bomb_count() const {
  // @@protoc_insertion_point(field_get:net.msg_land_game_info_rep.bomb_count)
  return _internal_bomb_count();
}
inline void msg_land_game_info_rep::_internal_set_bomb_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  bomb_count_ = value;
}
inline void msg_land_game_info_rep::set_bomb_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_bomb_count(value);
  // @@protoc_insertion_point(field_set:net.msg_land_game_info_rep.bomb_count)
}

// uint32 banker_user = 2;
inline void msg_land_game_info_rep::clear_banker_user() {
  banker_user_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msg_land_game_info_rep::_internal_banker_user() const {
  return banker_user_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msg_land_game_info_rep::banker_user() const {
  // @@protoc_insertion_point(field_get:net.msg_land_game_info_rep.banker_user)
  return _internal_banker_user();
}
inline void msg_land_game_info_rep::_internal_set_banker_user(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  banker_user_ = value;
}
inline void msg_land_game_info_rep::set_banker_user(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_banker_user(value);
  // @@protoc_insertion_point(field_set:net.msg_land_game_info_rep.banker_user)
}

// uint32 cur_user = 3;
inline void msg_land_game_info_rep::clear_cur_user() {
  cur_user_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msg_land_game_info_rep::_internal_cur_user() const {
  return cur_user_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msg_land_game_info_rep::cur_user() const {
  // @@protoc_insertion_point(field_get:net.msg_land_game_info_rep.cur_user)
  return _internal_cur_user();
}
inline void msg_land_game_info_rep::_internal_set_cur_user(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  cur_user_ = value;
}
inline void msg_land_game_info_rep::set_cur_user(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_cur_user(value);
  // @@protoc_insertion_point(field_set:net.msg_land_game_info_rep.cur_user)
}

// repeated uint32 call_score = 4;
inline int msg_land_game_info_rep::_internal_call_score_size() const {
  return call_score_.size();
}
inline int msg_land_game_info_rep::call_score_size() const {
  return _internal_call_score_size();
}
inline void msg_land_game_info_rep::clear_call_score() {
  call_score_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msg_land_game_info_rep::_internal_call_score(int index) const {
  return call_score_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msg_land_game_info_rep::call_score(int index) const {
  // @@protoc_insertion_point(field_get:net.msg_land_game_info_rep.call_score)
  return _internal_call_score(index);
}
inline void msg_land_game_info_rep::set_call_score(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  call_score_.Set(index, value);
  // @@protoc_insertion_point(field_set:net.msg_land_game_info_rep.call_score)
}
inline void msg_land_game_info_rep::_internal_add_call_score(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  call_score_.Add(value);
}
inline void msg_land_game_info_rep::add_call_score(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_call_score(value);
  // @@protoc_insertion_point(field_add:net.msg_land_game_info_rep.call_score)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
msg_land_game_info_rep::_internal_call_score() const {
  return call_score_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
msg_land_game_info_rep::call_score() const {
  // @@protoc_insertion_point(field_list:net.msg_land_game_info_rep.call_score)
  return _internal_call_score();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
msg_land_game_info_rep::_internal_mutable_call_score() {
  return &call_score_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
msg_land_game_info_rep::mutable_call_score() {
  // @@protoc_insertion_point(field_mutable_list:net.msg_land_game_info_rep.call_score)
  return _internal_mutable_call_score();
}

// uint32 turn_winer = 5;
inline void msg_land_game_info_rep::clear_turn_winer() {
  turn_winer_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msg_land_game_info_rep::_internal_turn_winer() const {
  return turn_winer_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msg_land_game_info_rep::turn_winer() const {
  // @@protoc_insertion_point(field_get:net.msg_land_game_info_rep.turn_winer)
  return _internal_turn_winer();
}
inline void msg_land_game_info_rep::_internal_set_turn_winer(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  turn_winer_ = value;
}
inline void msg_land_game_info_rep::set_turn_winer(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_turn_winer(value);
  // @@protoc_insertion_point(field_set:net.msg_land_game_info_rep.turn_winer)
}

// uint32 first_user = 6;
inline void msg_land_game_info_rep::clear_first_user() {
  first_user_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msg_land_game_info_rep::_internal_first_user() const {
  return first_user_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msg_land_game_info_rep::first_user() const {
  // @@protoc_insertion_point(field_get:net.msg_land_game_info_rep.first_user)
  return _internal_first_user();
}
inline void msg_land_game_info_rep::_internal_set_first_user(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  first_user_ = value;
}
inline void msg_land_game_info_rep::set_first_user(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_first_user(value);
  // @@protoc_insertion_point(field_set:net.msg_land_game_info_rep.first_user)
}

// repeated uint32 turn_card_data = 7;
inline int msg_land_game_info_rep::_internal_turn_card_data_size() const {
  return turn_card_data_.size();
}
inline int msg_land_game_info_rep::turn_card_data_size() const {
  return _internal_turn_card_data_size();
}
inline void msg_land_game_info_rep::clear_turn_card_data() {
  turn_card_data_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msg_land_game_info_rep::_internal_turn_card_data(int index) const {
  return turn_card_data_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msg_land_game_info_rep::turn_card_data(int index) const {
  // @@protoc_insertion_point(field_get:net.msg_land_game_info_rep.turn_card_data)
  return _internal_turn_card_data(index);
}
inline void msg_land_game_info_rep::set_turn_card_data(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  turn_card_data_.Set(index, value);
  // @@protoc_insertion_point(field_set:net.msg_land_game_info_rep.turn_card_data)
}
inline void msg_land_game_info_rep::_internal_add_turn_card_data(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  turn_card_data_.Add(value);
}
inline void msg_land_game_info_rep::add_turn_card_data(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_turn_card_data(value);
  // @@protoc_insertion_point(field_add:net.msg_land_game_info_rep.turn_card_data)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
msg_land_game_info_rep::_internal_turn_card_data() const {
  return turn_card_data_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
msg_land_game_info_rep::turn_card_data() const {
  // @@protoc_insertion_point(field_list:net.msg_land_game_info_rep.turn_card_data)
  return _internal_turn_card_data();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
msg_land_game_info_rep::_internal_mutable_turn_card_data() {
  return &turn_card_data_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
msg_land_game_info_rep::mutable_turn_card_data() {
  // @@protoc_insertion_point(field_mutable_list:net.msg_land_game_info_rep.turn_card_data)
  return _internal_mutable_turn_card_data();
}

// repeated uint32 banker_card = 8;
inline int msg_land_game_info_rep::_internal_banker_card_size() const {
  return banker_card_.size();
}
inline int msg_land_game_info_rep::banker_card_size() const {
  return _internal_banker_card_size();
}
inline void msg_land_game_info_rep::clear_banker_card() {
  banker_card_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msg_land_game_info_rep::_internal_banker_card(int index) const {
  return banker_card_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msg_land_game_info_rep::banker_card(int index) const {
  // @@protoc_insertion_point(field_get:net.msg_land_game_info_rep.banker_card)
  return _internal_banker_card(index);
}
inline void msg_land_game_info_rep::set_banker_card(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  banker_card_.Set(index, value);
  // @@protoc_insertion_point(field_set:net.msg_land_game_info_rep.banker_card)
}
inline void msg_land_game_info_rep::_internal_add_banker_card(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  banker_card_.Add(value);
}
inline void msg_land_game_info_rep::add_banker_card(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_banker_card(value);
  // @@protoc_insertion_point(field_add:net.msg_land_game_info_rep.banker_card)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
msg_land_game_info_rep::_internal_banker_card() const {
  return banker_card_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
msg_land_game_info_rep::banker_card() const {
  // @@protoc_insertion_point(field_list:net.msg_land_game_info_rep.banker_card)
  return _internal_banker_card();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
msg_land_game_info_rep::_internal_mutable_banker_card() {
  return &banker_card_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
msg_land_game_info_rep::mutable_banker_card() {
  // @@protoc_insertion_point(field_mutable_list:net.msg_land_game_info_rep.banker_card)
  return _internal_mutable_banker_card();
}

// repeated uint32 hand_card_count = 9;
inline int msg_land_game_info_rep::_internal_hand_card_count_size() const {
  return hand_card_count_.size();
}
inline int msg_land_game_info_rep::hand_card_count_size() const {
  return _internal_hand_card_count_size();
}
inline void msg_land_game_info_rep::clear_hand_card_count() {
  hand_card_count_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msg_land_game_info_rep::_internal_hand_card_count(int index) const {
  return hand_card_count_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msg_land_game_info_rep::hand_card_count(int index) const {
  // @@protoc_insertion_point(field_get:net.msg_land_game_info_rep.hand_card_count)
  return _internal_hand_card_count(index);
}
inline void msg_land_game_info_rep::set_hand_card_count(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  hand_card_count_.Set(index, value);
  // @@protoc_insertion_point(field_set:net.msg_land_game_info_rep.hand_card_count)
}
inline void msg_land_game_info_rep::_internal_add_hand_card_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  hand_card_count_.Add(value);
}
inline void msg_land_game_info_rep::add_hand_card_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_hand_card_count(value);
  // @@protoc_insertion_point(field_add:net.msg_land_game_info_rep.hand_card_count)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
msg_land_game_info_rep::_internal_hand_card_count() const {
  return hand_card_count_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
msg_land_game_info_rep::hand_card_count() const {
  // @@protoc_insertion_point(field_list:net.msg_land_game_info_rep.hand_card_count)
  return _internal_hand_card_count();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
msg_land_game_info_rep::_internal_mutable_hand_card_count() {
  return &hand_card_count_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
msg_land_game_info_rep::mutable_hand_card_count() {
  // @@protoc_insertion_point(field_mutable_list:net.msg_land_game_info_rep.hand_card_count)
  return _internal_mutable_hand_card_count();
}

// repeated uint32 hand_card_data = 10;
inline int msg_land_game_info_rep::_internal_hand_card_data_size() const {
  return hand_card_data_.size();
}
inline int msg_land_game_info_rep::hand_card_data_size() const {
  return _internal_hand_card_data_size();
}
inline void msg_land_game_info_rep::clear_hand_card_data() {
  hand_card_data_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msg_land_game_info_rep::_internal_hand_card_data(int index) const {
  return hand_card_data_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msg_land_game_info_rep::hand_card_data(int index) const {
  // @@protoc_insertion_point(field_get:net.msg_land_game_info_rep.hand_card_data)
  return _internal_hand_card_data(index);
}
inline void msg_land_game_info_rep::set_hand_card_data(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  hand_card_data_.Set(index, value);
  // @@protoc_insertion_point(field_set:net.msg_land_game_info_rep.hand_card_data)
}
inline void msg_land_game_info_rep::_internal_add_hand_card_data(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  hand_card_data_.Add(value);
}
inline void msg_land_game_info_rep::add_hand_card_data(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_hand_card_data(value);
  // @@protoc_insertion_point(field_add:net.msg_land_game_info_rep.hand_card_data)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
msg_land_game_info_rep::_internal_hand_card_data() const {
  return hand_card_data_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
msg_land_game_info_rep::hand_card_data() const {
  // @@protoc_insertion_point(field_list:net.msg_land_game_info_rep.hand_card_data)
  return _internal_hand_card_data();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
msg_land_game_info_rep::_internal_mutable_hand_card_data() {
  return &hand_card_data_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
msg_land_game_info_rep::mutable_hand_card_data() {
  // @@protoc_insertion_point(field_mutable_list:net.msg_land_game_info_rep.hand_card_data)
  return _internal_mutable_hand_card_data();
}

// uint32 game_state = 11;
inline void msg_land_game_info_rep::clear_game_state() {
  game_state_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msg_land_game_info_rep::_internal_game_state() const {
  return game_state_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msg_land_game_info_rep::game_state() const {
  // @@protoc_insertion_point(field_get:net.msg_land_game_info_rep.game_state)
  return _internal_game_state();
}
inline void msg_land_game_info_rep::_internal_set_game_state(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  game_state_ = value;
}
inline void msg_land_game_info_rep::set_game_state(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_game_state(value);
  // @@protoc_insertion_point(field_set:net.msg_land_game_info_rep.game_state)
}

// uint32 wait_time = 12;
inline void msg_land_game_info_rep::clear_wait_time() {
  wait_time_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msg_land_game_info_rep::_internal_wait_time() const {
  return wait_time_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msg_land_game_info_rep::wait_time() const {
  // @@protoc_insertion_point(field_get:net.msg_land_game_info_rep.wait_time)
  return _internal_wait_time();
}
inline void msg_land_game_info_rep::_internal_set_wait_time(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  wait_time_ = value;
}
inline void msg_land_game_info_rep::set_wait_time(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_wait_time(value);
  // @@protoc_insertion_point(field_set:net.msg_land_game_info_rep.wait_time)
}

// -------------------------------------------------------------------

// msg_land_start_rep

// uint32 start_user = 1;
inline void msg_land_start_rep::clear_start_user() {
  start_user_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msg_land_start_rep::_internal_start_user() const {
  return start_user_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msg_land_start_rep::start_user() const {
  // @@protoc_insertion_point(field_get:net.msg_land_start_rep.start_user)
  return _internal_start_user();
}
inline void msg_land_start_rep::_internal_set_start_user(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  start_user_ = value;
}
inline void msg_land_start_rep::set_start_user(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_start_user(value);
  // @@protoc_insertion_point(field_set:net.msg_land_start_rep.start_user)
}

// uint32 cur_user = 2;
inline void msg_land_start_rep::clear_cur_user() {
  cur_user_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msg_land_start_rep::_internal_cur_user() const {
  return cur_user_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msg_land_start_rep::cur_user() const {
  // @@protoc_insertion_point(field_get:net.msg_land_start_rep.cur_user)
  return _internal_cur_user();
}
inline void msg_land_start_rep::_internal_set_cur_user(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  cur_user_ = value;
}
inline void msg_land_start_rep::set_cur_user(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_cur_user(value);
  // @@protoc_insertion_point(field_set:net.msg_land_start_rep.cur_user)
}

// uint32 valid_card_data = 3;
inline void msg_land_start_rep::clear_valid_card_data() {
  valid_card_data_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msg_land_start_rep::_internal_valid_card_data() const {
  return valid_card_data_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msg_land_start_rep::valid_card_data() const {
  // @@protoc_insertion_point(field_get:net.msg_land_start_rep.valid_card_data)
  return _internal_valid_card_data();
}
inline void msg_land_start_rep::_internal_set_valid_card_data(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  valid_card_data_ = value;
}
inline void msg_land_start_rep::set_valid_card_data(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_valid_card_data(value);
  // @@protoc_insertion_point(field_set:net.msg_land_start_rep.valid_card_data)
}

// uint32 valid_card_index = 4;
inline void msg_land_start_rep::clear_valid_card_index() {
  valid_card_index_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msg_land_start_rep::_internal_valid_card_index() const {
  return valid_card_index_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msg_land_start_rep::valid_card_index() const {
  // @@protoc_insertion_point(field_get:net.msg_land_start_rep.valid_card_index)
  return _internal_valid_card_index();
}
inline void msg_land_start_rep::_internal_set_valid_card_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  valid_card_index_ = value;
}
inline void msg_land_start_rep::set_valid_card_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_valid_card_index(value);
  // @@protoc_insertion_point(field_set:net.msg_land_start_rep.valid_card_index)
}

// repeated uint32 card_data = 5;
inline int msg_land_start_rep::_internal_card_data_size() const {
  return card_data_.size();
}
inline int msg_land_start_rep::card_data_size() const {
  return _internal_card_data_size();
}
inline void msg_land_start_rep::clear_card_data() {
  card_data_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msg_land_start_rep::_internal_card_data(int index) const {
  return card_data_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msg_land_start_rep::card_data(int index) const {
  // @@protoc_insertion_point(field_get:net.msg_land_start_rep.card_data)
  return _internal_card_data(index);
}
inline void msg_land_start_rep::set_card_data(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  card_data_.Set(index, value);
  // @@protoc_insertion_point(field_set:net.msg_land_start_rep.card_data)
}
inline void msg_land_start_rep::_internal_add_card_data(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  card_data_.Add(value);
}
inline void msg_land_start_rep::add_card_data(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_card_data(value);
  // @@protoc_insertion_point(field_add:net.msg_land_start_rep.card_data)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
msg_land_start_rep::_internal_card_data() const {
  return card_data_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
msg_land_start_rep::card_data() const {
  // @@protoc_insertion_point(field_list:net.msg_land_start_rep.card_data)
  return _internal_card_data();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
msg_land_start_rep::_internal_mutable_card_data() {
  return &card_data_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
msg_land_start_rep::mutable_card_data() {
  // @@protoc_insertion_point(field_mutable_list:net.msg_land_start_rep.card_data)
  return _internal_mutable_card_data();
}

// uint32 cur_round = 6;
inline void msg_land_start_rep::clear_cur_round() {
  cur_round_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msg_land_start_rep::_internal_cur_round() const {
  return cur_round_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msg_land_start_rep::cur_round() const {
  // @@protoc_insertion_point(field_get:net.msg_land_start_rep.cur_round)
  return _internal_cur_round();
}
inline void msg_land_start_rep::_internal_set_cur_round(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  cur_round_ = value;
}
inline void msg_land_start_rep::set_cur_round(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_cur_round(value);
  // @@protoc_insertion_point(field_set:net.msg_land_start_rep.cur_round)
}

// -------------------------------------------------------------------

// msg_land_call_score_req

// uint32 call_score = 1;
inline void msg_land_call_score_req::clear_call_score() {
  call_score_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msg_land_call_score_req::_internal_call_score() const {
  return call_score_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msg_land_call_score_req::call_score() const {
  // @@protoc_insertion_point(field_get:net.msg_land_call_score_req.call_score)
  return _internal_call_score();
}
inline void msg_land_call_score_req::_internal_set_call_score(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  call_score_ = value;
}
inline void msg_land_call_score_req::set_call_score(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_call_score(value);
  // @@protoc_insertion_point(field_set:net.msg_land_call_score_req.call_score)
}

// -------------------------------------------------------------------

// msg_land_call_score_rep

// uint32 cur_user = 1;
inline void msg_land_call_score_rep::clear_cur_user() {
  cur_user_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msg_land_call_score_rep::_internal_cur_user() const {
  return cur_user_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msg_land_call_score_rep::cur_user() const {
  // @@protoc_insertion_point(field_get:net.msg_land_call_score_rep.cur_user)
  return _internal_cur_user();
}
inline void msg_land_call_score_rep::_internal_set_cur_user(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  cur_user_ = value;
}
inline void msg_land_call_score_rep::set_cur_user(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_cur_user(value);
  // @@protoc_insertion_point(field_set:net.msg_land_call_score_rep.cur_user)
}

// uint32 call_user = 2;
inline void msg_land_call_score_rep::clear_call_user() {
  call_user_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msg_land_call_score_rep::_internal_call_user() const {
  return call_user_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msg_land_call_score_rep::call_user() const {
  // @@protoc_insertion_point(field_get:net.msg_land_call_score_rep.call_user)
  return _internal_call_user();
}
inline void msg_land_call_score_rep::_internal_set_call_user(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  call_user_ = value;
}
inline void msg_land_call_score_rep::set_call_user(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_call_user(value);
  // @@protoc_insertion_point(field_set:net.msg_land_call_score_rep.call_user)
}

// uint32 call_score = 3;
inline void msg_land_call_score_rep::clear_call_score() {
  call_score_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msg_land_call_score_rep::_internal_call_score() const {
  return call_score_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msg_land_call_score_rep::call_score() const {
  // @@protoc_insertion_point(field_get:net.msg_land_call_score_rep.call_score)
  return _internal_call_score();
}
inline void msg_land_call_score_rep::_internal_set_call_score(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  call_score_ = value;
}
inline void msg_land_call_score_rep::set_call_score(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_call_score(value);
  // @@protoc_insertion_point(field_set:net.msg_land_call_score_rep.call_score)
}

// -------------------------------------------------------------------

// msg_land_req_hand_card_req

// uint32 chair_id = 1;
inline void msg_land_req_hand_card_req::clear_chair_id() {
  chair_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msg_land_req_hand_card_req::_internal_chair_id() const {
  return chair_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msg_land_req_hand_card_req::chair_id() const {
  // @@protoc_insertion_point(field_get:net.msg_land_req_hand_card_req.chair_id)
  return _internal_chair_id();
}
inline void msg_land_req_hand_card_req::_internal_set_chair_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  chair_id_ = value;
}
inline void msg_land_req_hand_card_req::set_chair_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_chair_id(value);
  // @@protoc_insertion_point(field_set:net.msg_land_req_hand_card_req.chair_id)
}

// -------------------------------------------------------------------

// msg_land_hand_card_rep

// uint32 chair_id = 1;
inline void msg_land_hand_card_rep::clear_chair_id() {
  chair_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msg_land_hand_card_rep::_internal_chair_id() const {
  return chair_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msg_land_hand_card_rep::chair_id() const {
  // @@protoc_insertion_point(field_get:net.msg_land_hand_card_rep.chair_id)
  return _internal_chair_id();
}
inline void msg_land_hand_card_rep::_internal_set_chair_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  chair_id_ = value;
}
inline void msg_land_hand_card_rep::set_chair_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_chair_id(value);
  // @@protoc_insertion_point(field_set:net.msg_land_hand_card_rep.chair_id)
}

// repeated uint32 card_data = 2;
inline int msg_land_hand_card_rep::_internal_card_data_size() const {
  return card_data_.size();
}
inline int msg_land_hand_card_rep::card_data_size() const {
  return _internal_card_data_size();
}
inline void msg_land_hand_card_rep::clear_card_data() {
  card_data_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msg_land_hand_card_rep::_internal_card_data(int index) const {
  return card_data_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msg_land_hand_card_rep::card_data(int index) const {
  // @@protoc_insertion_point(field_get:net.msg_land_hand_card_rep.card_data)
  return _internal_card_data(index);
}
inline void msg_land_hand_card_rep::set_card_data(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  card_data_.Set(index, value);
  // @@protoc_insertion_point(field_set:net.msg_land_hand_card_rep.card_data)
}
inline void msg_land_hand_card_rep::_internal_add_card_data(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  card_data_.Add(value);
}
inline void msg_land_hand_card_rep::add_card_data(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_card_data(value);
  // @@protoc_insertion_point(field_add:net.msg_land_hand_card_rep.card_data)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
msg_land_hand_card_rep::_internal_card_data() const {
  return card_data_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
msg_land_hand_card_rep::card_data() const {
  // @@protoc_insertion_point(field_list:net.msg_land_hand_card_rep.card_data)
  return _internal_card_data();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
msg_land_hand_card_rep::_internal_mutable_card_data() {
  return &card_data_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
msg_land_hand_card_rep::mutable_card_data() {
  // @@protoc_insertion_point(field_mutable_list:net.msg_land_hand_card_rep.card_data)
  return _internal_mutable_card_data();
}

// -------------------------------------------------------------------

// msg_land_banker_info_rep

// uint32 banker_user = 1;
inline void msg_land_banker_info_rep::clear_banker_user() {
  banker_user_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msg_land_banker_info_rep::_internal_banker_user() const {
  return banker_user_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msg_land_banker_info_rep::banker_user() const {
  // @@protoc_insertion_point(field_get:net.msg_land_banker_info_rep.banker_user)
  return _internal_banker_user();
}
inline void msg_land_banker_info_rep::_internal_set_banker_user(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  banker_user_ = value;
}
inline void msg_land_banker_info_rep::set_banker_user(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_banker_user(value);
  // @@protoc_insertion_point(field_set:net.msg_land_banker_info_rep.banker_user)
}

// uint32 cur_user = 2;
inline void msg_land_banker_info_rep::clear_cur_user() {
  cur_user_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msg_land_banker_info_rep::_internal_cur_user() const {
  return cur_user_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msg_land_banker_info_rep::cur_user() const {
  // @@protoc_insertion_point(field_get:net.msg_land_banker_info_rep.cur_user)
  return _internal_cur_user();
}
inline void msg_land_banker_info_rep::_internal_set_cur_user(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  cur_user_ = value;
}
inline void msg_land_banker_info_rep::set_cur_user(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_cur_user(value);
  // @@protoc_insertion_point(field_set:net.msg_land_banker_info_rep.cur_user)
}

// uint32 call_score = 3;
inline void msg_land_banker_info_rep::clear_call_score() {
  call_score_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msg_land_banker_info_rep::_internal_call_score() const {
  return call_score_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msg_land_banker_info_rep::call_score() const {
  // @@protoc_insertion_point(field_get:net.msg_land_banker_info_rep.call_score)
  return _internal_call_score();
}
inline void msg_land_banker_info_rep::_internal_set_call_score(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  call_score_ = value;
}
inline void msg_land_banker_info_rep::set_call_score(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_call_score(value);
  // @@protoc_insertion_point(field_set:net.msg_land_banker_info_rep.call_score)
}

// repeated uint32 banker_card = 4;
inline int msg_land_banker_info_rep::_internal_banker_card_size() const {
  return banker_card_.size();
}
inline int msg_land_banker_info_rep::banker_card_size() const {
  return _internal_banker_card_size();
}
inline void msg_land_banker_info_rep::clear_banker_card() {
  banker_card_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msg_land_banker_info_rep::_internal_banker_card(int index) const {
  return banker_card_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msg_land_banker_info_rep::banker_card(int index) const {
  // @@protoc_insertion_point(field_get:net.msg_land_banker_info_rep.banker_card)
  return _internal_banker_card(index);
}
inline void msg_land_banker_info_rep::set_banker_card(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  banker_card_.Set(index, value);
  // @@protoc_insertion_point(field_set:net.msg_land_banker_info_rep.banker_card)
}
inline void msg_land_banker_info_rep::_internal_add_banker_card(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  banker_card_.Add(value);
}
inline void msg_land_banker_info_rep::add_banker_card(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_banker_card(value);
  // @@protoc_insertion_point(field_add:net.msg_land_banker_info_rep.banker_card)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
msg_land_banker_info_rep::_internal_banker_card() const {
  return banker_card_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
msg_land_banker_info_rep::banker_card() const {
  // @@protoc_insertion_point(field_list:net.msg_land_banker_info_rep.banker_card)
  return _internal_banker_card();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
msg_land_banker_info_rep::_internal_mutable_banker_card() {
  return &banker_card_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
msg_land_banker_info_rep::mutable_banker_card() {
  // @@protoc_insertion_point(field_mutable_list:net.msg_land_banker_info_rep.banker_card)
  return _internal_mutable_banker_card();
}

// -------------------------------------------------------------------

// msg_land_out_card_req

// repeated uint32 card_data = 1;
inline int msg_land_out_card_req::_internal_card_data_size() const {
  return card_data_.size();
}
inline int msg_land_out_card_req::card_data_size() const {
  return _internal_card_data_size();
}
inline void msg_land_out_card_req::clear_card_data() {
  card_data_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msg_land_out_card_req::_internal_card_data(int index) const {
  return card_data_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msg_land_out_card_req::card_data(int index) const {
  // @@protoc_insertion_point(field_get:net.msg_land_out_card_req.card_data)
  return _internal_card_data(index);
}
inline void msg_land_out_card_req::set_card_data(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  card_data_.Set(index, value);
  // @@protoc_insertion_point(field_set:net.msg_land_out_card_req.card_data)
}
inline void msg_land_out_card_req::_internal_add_card_data(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  card_data_.Add(value);
}
inline void msg_land_out_card_req::add_card_data(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_card_data(value);
  // @@protoc_insertion_point(field_add:net.msg_land_out_card_req.card_data)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
msg_land_out_card_req::_internal_card_data() const {
  return card_data_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
msg_land_out_card_req::card_data() const {
  // @@protoc_insertion_point(field_list:net.msg_land_out_card_req.card_data)
  return _internal_card_data();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
msg_land_out_card_req::_internal_mutable_card_data() {
  return &card_data_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
msg_land_out_card_req::mutable_card_data() {
  // @@protoc_insertion_point(field_mutable_list:net.msg_land_out_card_req.card_data)
  return _internal_mutable_card_data();
}

// -------------------------------------------------------------------

// msg_land_out_card_rep

// uint32 cur_user = 1;
inline void msg_land_out_card_rep::clear_cur_user() {
  cur_user_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msg_land_out_card_rep::_internal_cur_user() const {
  return cur_user_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msg_land_out_card_rep::cur_user() const {
  // @@protoc_insertion_point(field_get:net.msg_land_out_card_rep.cur_user)
  return _internal_cur_user();
}
inline void msg_land_out_card_rep::_internal_set_cur_user(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  cur_user_ = value;
}
inline void msg_land_out_card_rep::set_cur_user(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_cur_user(value);
  // @@protoc_insertion_point(field_set:net.msg_land_out_card_rep.cur_user)
}

// uint32 out_card_user = 2;
inline void msg_land_out_card_rep::clear_out_card_user() {
  out_card_user_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msg_land_out_card_rep::_internal_out_card_user() const {
  return out_card_user_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msg_land_out_card_rep::out_card_user() const {
  // @@protoc_insertion_point(field_get:net.msg_land_out_card_rep.out_card_user)
  return _internal_out_card_user();
}
inline void msg_land_out_card_rep::_internal_set_out_card_user(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  out_card_user_ = value;
}
inline void msg_land_out_card_rep::set_out_card_user(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_out_card_user(value);
  // @@protoc_insertion_point(field_set:net.msg_land_out_card_rep.out_card_user)
}

// repeated uint32 card_data = 3;
inline int msg_land_out_card_rep::_internal_card_data_size() const {
  return card_data_.size();
}
inline int msg_land_out_card_rep::card_data_size() const {
  return _internal_card_data_size();
}
inline void msg_land_out_card_rep::clear_card_data() {
  card_data_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msg_land_out_card_rep::_internal_card_data(int index) const {
  return card_data_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msg_land_out_card_rep::card_data(int index) const {
  // @@protoc_insertion_point(field_get:net.msg_land_out_card_rep.card_data)
  return _internal_card_data(index);
}
inline void msg_land_out_card_rep::set_card_data(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  card_data_.Set(index, value);
  // @@protoc_insertion_point(field_set:net.msg_land_out_card_rep.card_data)
}
inline void msg_land_out_card_rep::_internal_add_card_data(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  card_data_.Add(value);
}
inline void msg_land_out_card_rep::add_card_data(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_card_data(value);
  // @@protoc_insertion_point(field_add:net.msg_land_out_card_rep.card_data)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
msg_land_out_card_rep::_internal_card_data() const {
  return card_data_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
msg_land_out_card_rep::card_data() const {
  // @@protoc_insertion_point(field_list:net.msg_land_out_card_rep.card_data)
  return _internal_card_data();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
msg_land_out_card_rep::_internal_mutable_card_data() {
  return &card_data_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
msg_land_out_card_rep::mutable_card_data() {
  // @@protoc_insertion_point(field_mutable_list:net.msg_land_out_card_rep.card_data)
  return _internal_mutable_card_data();
}

// -------------------------------------------------------------------

// msg_land_pass_card_req

// uint32 reason = 1;
inline void msg_land_pass_card_req::clear_reason() {
  reason_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msg_land_pass_card_req::_internal_reason() const {
  return reason_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msg_land_pass_card_req::reason() const {
  // @@protoc_insertion_point(field_get:net.msg_land_pass_card_req.reason)
  return _internal_reason();
}
inline void msg_land_pass_card_req::_internal_set_reason(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  reason_ = value;
}
inline void msg_land_pass_card_req::set_reason(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_reason(value);
  // @@protoc_insertion_point(field_set:net.msg_land_pass_card_req.reason)
}

// -------------------------------------------------------------------

// msg_land_pass_card_rep

// uint32 turn_over = 1;
inline void msg_land_pass_card_rep::clear_turn_over() {
  turn_over_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msg_land_pass_card_rep::_internal_turn_over() const {
  return turn_over_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msg_land_pass_card_rep::turn_over() const {
  // @@protoc_insertion_point(field_get:net.msg_land_pass_card_rep.turn_over)
  return _internal_turn_over();
}
inline void msg_land_pass_card_rep::_internal_set_turn_over(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  turn_over_ = value;
}
inline void msg_land_pass_card_rep::set_turn_over(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_turn_over(value);
  // @@protoc_insertion_point(field_set:net.msg_land_pass_card_rep.turn_over)
}

// uint32 cur_user = 2;
inline void msg_land_pass_card_rep::clear_cur_user() {
  cur_user_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msg_land_pass_card_rep::_internal_cur_user() const {
  return cur_user_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msg_land_pass_card_rep::cur_user() const {
  // @@protoc_insertion_point(field_get:net.msg_land_pass_card_rep.cur_user)
  return _internal_cur_user();
}
inline void msg_land_pass_card_rep::_internal_set_cur_user(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  cur_user_ = value;
}
inline void msg_land_pass_card_rep::set_cur_user(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_cur_user(value);
  // @@protoc_insertion_point(field_set:net.msg_land_pass_card_rep.cur_user)
}

// uint32 pass_card_user = 3;
inline void msg_land_pass_card_rep::clear_pass_card_user() {
  pass_card_user_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msg_land_pass_card_rep::_internal_pass_card_user() const {
  return pass_card_user_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msg_land_pass_card_rep::pass_card_user() const {
  // @@protoc_insertion_point(field_get:net.msg_land_pass_card_rep.pass_card_user)
  return _internal_pass_card_user();
}
inline void msg_land_pass_card_rep::_internal_set_pass_card_user(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  pass_card_user_ = value;
}
inline void msg_land_pass_card_rep::set_pass_card_user(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_pass_card_user(value);
  // @@protoc_insertion_point(field_set:net.msg_land_pass_card_rep.pass_card_user)
}

// -------------------------------------------------------------------

// msg_land_game_over_rep

// repeated int64 scores = 1;
inline int msg_land_game_over_rep::_internal_scores_size() const {
  return scores_.size();
}
inline int msg_land_game_over_rep::scores_size() const {
  return _internal_scores_size();
}
inline void msg_land_game_over_rep::clear_scores() {
  scores_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msg_land_game_over_rep::_internal_scores(int index) const {
  return scores_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msg_land_game_over_rep::scores(int index) const {
  // @@protoc_insertion_point(field_get:net.msg_land_game_over_rep.scores)
  return _internal_scores(index);
}
inline void msg_land_game_over_rep::set_scores(int index, ::PROTOBUF_NAMESPACE_ID::int64 value) {
  scores_.Set(index, value);
  // @@protoc_insertion_point(field_set:net.msg_land_game_over_rep.scores)
}
inline void msg_land_game_over_rep::_internal_add_scores(::PROTOBUF_NAMESPACE_ID::int64 value) {
  scores_.Add(value);
}
inline void msg_land_game_over_rep::add_scores(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_add_scores(value);
  // @@protoc_insertion_point(field_add:net.msg_land_game_over_rep.scores)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
msg_land_game_over_rep::_internal_scores() const {
  return scores_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >&
msg_land_game_over_rep::scores() const {
  // @@protoc_insertion_point(field_list:net.msg_land_game_over_rep.scores)
  return _internal_scores();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
msg_land_game_over_rep::_internal_mutable_scores() {
  return &scores_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int64 >*
msg_land_game_over_rep::mutable_scores() {
  // @@protoc_insertion_point(field_mutable_list:net.msg_land_game_over_rep.scores)
  return _internal_mutable_scores();
}

// uint32 chun_tian = 2;
inline void msg_land_game_over_rep::clear_chun_tian() {
  chun_tian_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msg_land_game_over_rep::_internal_chun_tian() const {
  return chun_tian_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msg_land_game_over_rep::chun_tian() const {
  // @@protoc_insertion_point(field_get:net.msg_land_game_over_rep.chun_tian)
  return _internal_chun_tian();
}
inline void msg_land_game_over_rep::_internal_set_chun_tian(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  chun_tian_ = value;
}
inline void msg_land_game_over_rep::set_chun_tian(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_chun_tian(value);
  // @@protoc_insertion_point(field_set:net.msg_land_game_over_rep.chun_tian)
}

// uint32 fan_chun_tian = 3;
inline void msg_land_game_over_rep::clear_fan_chun_tian() {
  fan_chun_tian_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msg_land_game_over_rep::_internal_fan_chun_tian() const {
  return fan_chun_tian_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msg_land_game_over_rep::fan_chun_tian() const {
  // @@protoc_insertion_point(field_get:net.msg_land_game_over_rep.fan_chun_tian)
  return _internal_fan_chun_tian();
}
inline void msg_land_game_over_rep::_internal_set_fan_chun_tian(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  fan_chun_tian_ = value;
}
inline void msg_land_game_over_rep::set_fan_chun_tian(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_fan_chun_tian(value);
  // @@protoc_insertion_point(field_set:net.msg_land_game_over_rep.fan_chun_tian)
}

// uint32 bomb_count = 4;
inline void msg_land_game_over_rep::clear_bomb_count() {
  bomb_count_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msg_land_game_over_rep::_internal_bomb_count() const {
  return bomb_count_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msg_land_game_over_rep::bomb_count() const {
  // @@protoc_insertion_point(field_get:net.msg_land_game_over_rep.bomb_count)
  return _internal_bomb_count();
}
inline void msg_land_game_over_rep::_internal_set_bomb_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  bomb_count_ = value;
}
inline void msg_land_game_over_rep::set_bomb_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_bomb_count(value);
  // @@protoc_insertion_point(field_set:net.msg_land_game_over_rep.bomb_count)
}

// repeated uint32 each_bomb_counts = 5;
inline int msg_land_game_over_rep::_internal_each_bomb_counts_size() const {
  return each_bomb_counts_.size();
}
inline int msg_land_game_over_rep::each_bomb_counts_size() const {
  return _internal_each_bomb_counts_size();
}
inline void msg_land_game_over_rep::clear_each_bomb_counts() {
  each_bomb_counts_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msg_land_game_over_rep::_internal_each_bomb_counts(int index) const {
  return each_bomb_counts_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msg_land_game_over_rep::each_bomb_counts(int index) const {
  // @@protoc_insertion_point(field_get:net.msg_land_game_over_rep.each_bomb_counts)
  return _internal_each_bomb_counts(index);
}
inline void msg_land_game_over_rep::set_each_bomb_counts(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  each_bomb_counts_.Set(index, value);
  // @@protoc_insertion_point(field_set:net.msg_land_game_over_rep.each_bomb_counts)
}
inline void msg_land_game_over_rep::_internal_add_each_bomb_counts(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  each_bomb_counts_.Add(value);
}
inline void msg_land_game_over_rep::add_each_bomb_counts(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_each_bomb_counts(value);
  // @@protoc_insertion_point(field_add:net.msg_land_game_over_rep.each_bomb_counts)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
msg_land_game_over_rep::_internal_each_bomb_counts() const {
  return each_bomb_counts_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
msg_land_game_over_rep::each_bomb_counts() const {
  // @@protoc_insertion_point(field_list:net.msg_land_game_over_rep.each_bomb_counts)
  return _internal_each_bomb_counts();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
msg_land_game_over_rep::_internal_mutable_each_bomb_counts() {
  return &each_bomb_counts_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
msg_land_game_over_rep::mutable_each_bomb_counts() {
  // @@protoc_insertion_point(field_mutable_list:net.msg_land_game_over_rep.each_bomb_counts)
  return _internal_mutable_each_bomb_counts();
}

// uint32 banker_score = 6;
inline void msg_land_game_over_rep::clear_banker_score() {
  banker_score_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msg_land_game_over_rep::_internal_banker_score() const {
  return banker_score_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msg_land_game_over_rep::banker_score() const {
  // @@protoc_insertion_point(field_get:net.msg_land_game_over_rep.banker_score)
  return _internal_banker_score();
}
inline void msg_land_game_over_rep::_internal_set_banker_score(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  banker_score_ = value;
}
inline void msg_land_game_over_rep::set_banker_score(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_banker_score(value);
  // @@protoc_insertion_point(field_set:net.msg_land_game_over_rep.banker_score)
}

// repeated uint32 card_counts = 7;
inline int msg_land_game_over_rep::_internal_card_counts_size() const {
  return card_counts_.size();
}
inline int msg_land_game_over_rep::card_counts_size() const {
  return _internal_card_counts_size();
}
inline void msg_land_game_over_rep::clear_card_counts() {
  card_counts_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msg_land_game_over_rep::_internal_card_counts(int index) const {
  return card_counts_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msg_land_game_over_rep::card_counts(int index) const {
  // @@protoc_insertion_point(field_get:net.msg_land_game_over_rep.card_counts)
  return _internal_card_counts(index);
}
inline void msg_land_game_over_rep::set_card_counts(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  card_counts_.Set(index, value);
  // @@protoc_insertion_point(field_set:net.msg_land_game_over_rep.card_counts)
}
inline void msg_land_game_over_rep::_internal_add_card_counts(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  card_counts_.Add(value);
}
inline void msg_land_game_over_rep::add_card_counts(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_card_counts(value);
  // @@protoc_insertion_point(field_add:net.msg_land_game_over_rep.card_counts)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
msg_land_game_over_rep::_internal_card_counts() const {
  return card_counts_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
msg_land_game_over_rep::card_counts() const {
  // @@protoc_insertion_point(field_list:net.msg_land_game_over_rep.card_counts)
  return _internal_card_counts();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
msg_land_game_over_rep::_internal_mutable_card_counts() {
  return &card_counts_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
msg_land_game_over_rep::mutable_card_counts() {
  // @@protoc_insertion_point(field_mutable_list:net.msg_land_game_over_rep.card_counts)
  return _internal_mutable_card_counts();
}

// repeated uint32 hand_card_data = 8;
inline int msg_land_game_over_rep::_internal_hand_card_data_size() const {
  return hand_card_data_.size();
}
inline int msg_land_game_over_rep::hand_card_data_size() const {
  return _internal_hand_card_data_size();
}
inline void msg_land_game_over_rep::clear_hand_card_data() {
  hand_card_data_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msg_land_game_over_rep::_internal_hand_card_data(int index) const {
  return hand_card_data_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 msg_land_game_over_rep::hand_card_data(int index) const {
  // @@protoc_insertion_point(field_get:net.msg_land_game_over_rep.hand_card_data)
  return _internal_hand_card_data(index);
}
inline void msg_land_game_over_rep::set_hand_card_data(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  hand_card_data_.Set(index, value);
  // @@protoc_insertion_point(field_set:net.msg_land_game_over_rep.hand_card_data)
}
inline void msg_land_game_over_rep::_internal_add_hand_card_data(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  hand_card_data_.Add(value);
}
inline void msg_land_game_over_rep::add_hand_card_data(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_hand_card_data(value);
  // @@protoc_insertion_point(field_add:net.msg_land_game_over_rep.hand_card_data)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
msg_land_game_over_rep::_internal_hand_card_data() const {
  return hand_card_data_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
msg_land_game_over_rep::hand_card_data() const {
  // @@protoc_insertion_point(field_list:net.msg_land_game_over_rep.hand_card_data)
  return _internal_hand_card_data();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
msg_land_game_over_rep::_internal_mutable_hand_card_data() {
  return &hand_card_data_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
msg_land_game_over_rep::mutable_hand_card_data() {
  // @@protoc_insertion_point(field_mutable_list:net.msg_land_game_over_rep.hand_card_data)
  return _internal_mutable_hand_card_data();
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace net

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::net::CLIENT_MSG_LAND> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::net::CLIENT_MSG_LAND>() {
  return ::net::CLIENT_MSG_LAND_descriptor();
}
template <> struct is_proto_enum< ::net::emLAND_TYPE> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::net::emLAND_TYPE>() {
  return ::net::emLAND_TYPE_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_land_5flogic_5fmsg_2eproto
