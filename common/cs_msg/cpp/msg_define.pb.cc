// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msg_define.proto

#include "msg_define.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace net {
}  // namespace net
static constexpr ::PROTOBUF_NAMESPACE_ID::Metadata* file_level_metadata_msg_5fdefine_2eproto = nullptr;
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_msg_5fdefine_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_msg_5fdefine_2eproto = nullptr;
const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_msg_5fdefine_2eproto::offsets[1] = {};
static constexpr ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema* schemas = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::Message* const* file_default_instances = nullptr;

const char descriptor_table_protodef_msg_5fdefine_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\020msg_define.proto\022\003net*\237\001\n\nPHP_MSG_ID\022\021"
  "\n\rPLAT_MSG_NULL\020\000\022\021\n\rPLAT_MSG_PING\020\n\022\033\n\027"
  "PLAT_MSG_CHANGE_SAFEPWD\020\013\022\030\n\024PLAT_MSG_KI"
  "LL_PLAYER\020\014\022\034\n\030PLAT_MSG_CHANGE_ACCVALUE\020"
  "\r\022\026\n\022PLAT_MSG_BROADCAST\020\016*\373\013\n\rCLIENT_MSG"
  "_ID\022\020\n\014C2S_MSG_NULL\020\000\022\022\n\rC2S_MSG_HEART\020\350"
  "\007\022\022\n\rC2S_MSG_LOGIN\020\351\007\022\026\n\021S2C_MSG_LOGIN_R"
  "EP\020\352\007\022\031\n\024S2C_MSG_LOGINOUT_REP\020\353\007\022\035\n\030S2C_"
  "MSG_VERSION_INFO_REP\020\354\007\022\027\n\022S2C_MSG_ENTER"
  "_GAME\020\362\007\022\030\n\023S2C_MSG_PLAYER_INFO\020\363\007\022\035\n\030S2"
  "C_MSG_UPDATE_ACC_VALUE\020\364\007\022\032\n\025C2S_MSG_REQ"
  "_SVRS_INFO\020\314\010\022\026\n\021S2C_MSG_SVRS_INFO\020\315\010\022\026\n"
  "\021C2S_MSG_ENTER_SVR\020\316\010\022\032\n\025S2C_MSG_ENTER_S"
  "VR_REP\020\317\010\022\027\n\022C2S_MSG_REPORT_GPS\020\261\t\022\035\n\030C2"
  "S_MSG_REPORT_NET_DELAY\020\262\t\022\034\n\027C2S_MSG_GET"
  "_GAME_RECORD\020\263\t\022 \n\033S2C_MSG_GET_GAME_RECO"
  "RD_REP\020\264\t\022!\n\034S2C_MSG_SEND_ALL_MISSION_RE"
  "P\020\272\t\022\035\n\030S2C_MSG_SEND_MISSION_REP\020\273\t\022\"\n\035C"
  "2S_MSG_GET_MISSION_PRIZE_REQ\020\274\t\022\"\n\035S2C_M"
  "SG_GET_MISSION_PRIZE_REP\020\275\t\022\027\n\022C2S_MSG_B"
  "ACK_LOBBY\020\321\017\022\033\n\026S2C_MSG_BACK_LOBBY_REP\020\322"
  "\017\022\033\n\026C2S_MSG_REQ_ROOMS_INFO\020\331\017\022\027\n\022S2C_MS"
  "G_ROOMS_INFO\020\332\017\022\027\n\022C2S_MSG_ENTER_ROOM\020\333\017"
  "\022\033\n\026S2C_MSG_ENTER_ROOM_REP\020\334\017\022\036\n\031S2C_MSG"
  "_NOTIFY_LEAVE_ROOM\020\335\017\022\033\n\026C2S_MSG_REQ_TAB"
  "LE_LIST\020\336\017\022\027\n\022S2C_MSG_TABLE_LIST\020\337\017\022\034\n\027C"
  "2S_MSG_LEAVE_TABLE_REQ\020\344\017\022\034\n\027S2C_MSG_LEA"
  "VE_TABLE_REP\020\345\017\022\034\n\027C2S_MSG_ENTER_TABLE_R"
  "EQ\020\350\017\022\030\n\023S2C_MSG_ENTER_TABLE\020\351\017\022\027\n\022S2C_M"
  "SG_TABLE_INFO\020\352\017\022\027\n\022S2C_MSG_SEATS_INFO\020\353"
  "\017\022\030\n\023C2S_MSG_TABLE_READY\020\354\017\022\034\n\027S2C_MSG_T"
  "ABLE_READY_REP\020\355\017\022\027\n\022C2S_MSG_TABLE_CHAT\020"
  "\356\017\022\027\n\022S2C_MSG_TABLE_CHAT\020\357\017\022\033\n\026C2S_MSG_T"
  "ABLE_SET_AUTO\020\360\017\022\033\n\026S2C_MSG_TABLE_SET_AU"
  "TO\020\361\017\022\033\n\026C2S_MSG_FAST_JOIN_ROOM\020\370\017\022\037\n\032S2"
  "C_MSG_FAST_JOIN_ROOM_REP\020\371\017\022\034\n\027C2S_MSG_F"
  "AST_JOIN_TABLE\020\372\017\022 \n\033S2C_MSG_FAST_JOIN_T"
  "ABLE_REP\020\373\017\022!\n\034C2S_MSG_QUERY_TABLE_LIST_"
  "REQ\020\375\017\022!\n\034S2C_MSG_QUERY_TABLE_LIST_REP\020\376"
  "\017\022\037\n\032S2C_MSG_NOTIFY_PLAYER_JOIN\020\377\017\022\035\n\030S2"
  "C_MSG_LOOKER_LIST_INFO\020\200\020\022\034\n\027C2S_MSG_SIT"
  "DOWN_STANDUP\020\201\020\022\034\n\027S2C_MSG_SITDOWN_STAND"
  "UP\020\202\020\022 \n\033S2C_MSG_SEAT_VALUE_INFO_REP\020\207\020b"
  "\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_msg_5fdefine_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_msg_5fdefine_2eproto_sccs[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_msg_5fdefine_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_msg_5fdefine_2eproto = {
  false, false, descriptor_table_protodef_msg_5fdefine_2eproto, "msg_define.proto", 1727,
  &descriptor_table_msg_5fdefine_2eproto_once, descriptor_table_msg_5fdefine_2eproto_sccs, descriptor_table_msg_5fdefine_2eproto_deps, 0, 0,
  schemas, file_default_instances, TableStruct_msg_5fdefine_2eproto::offsets,
  file_level_metadata_msg_5fdefine_2eproto, 0, file_level_enum_descriptors_msg_5fdefine_2eproto, file_level_service_descriptors_msg_5fdefine_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_msg_5fdefine_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_msg_5fdefine_2eproto)), true);
namespace net {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* PHP_MSG_ID_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_msg_5fdefine_2eproto);
  return file_level_enum_descriptors_msg_5fdefine_2eproto[0];
}
bool PHP_MSG_ID_IsValid(int value) {
  switch (value) {
    case 0:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CLIENT_MSG_ID_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_msg_5fdefine_2eproto);
  return file_level_enum_descriptors_msg_5fdefine_2eproto[1];
}
bool CLIENT_MSG_ID_IsValid(int value) {
  switch (value) {
    case 0:
    case 1000:
    case 1001:
    case 1002:
    case 1003:
    case 1004:
    case 1010:
    case 1011:
    case 1012:
    case 1100:
    case 1101:
    case 1102:
    case 1103:
    case 1201:
    case 1202:
    case 1203:
    case 1204:
    case 1210:
    case 1211:
    case 1212:
    case 1213:
    case 2001:
    case 2002:
    case 2009:
    case 2010:
    case 2011:
    case 2012:
    case 2013:
    case 2014:
    case 2015:
    case 2020:
    case 2021:
    case 2024:
    case 2025:
    case 2026:
    case 2027:
    case 2028:
    case 2029:
    case 2030:
    case 2031:
    case 2032:
    case 2033:
    case 2040:
    case 2041:
    case 2042:
    case 2043:
    case 2045:
    case 2046:
    case 2047:
    case 2048:
    case 2049:
    case 2050:
    case 2055:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace net
PROTOBUF_NAMESPACE_OPEN
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
